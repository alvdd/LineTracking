#! /usr/bin/env python
#*  All rights reserved.
#*
#*  Redistribution and use in source and binary forms, with or without
#*  modification, are permitted provided that the following conditions
#*  are met:
#*
#*   * Redistributions of source code must retain the above copyright
#*     notice, this list of conditions and the following disclaimer.
#*   * Redistributions in binary form must reproduce the above
#*     copyright notice, this list of conditions and the following
#*     disclaimer in the documentation and/or other materials provided
#*     with the distribution.
#*   * Neither the name of the Willow Garage nor the names of its
#*     contributors may be used to endorse or promote products derived
#*     from this software without specific prior written permission.
#*
#*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#*  POSSIBILITY OF SUCH DAMAGE.
#***********************************************************

# Author: 

PACKAGE='iri_twist_to_manual_control'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#       Name                       Type       Reconfiguration level            Description                       Default   Min   Max
#gen.add("velocity_scale_factor",  double_t,  0,                               "Maximum velocity scale factor",  0.5,      0.0,  1.0)
gen.add("steering_min",  int_t, 0, "Minimum output steering value",  45, 0, 180)
gen.add("steering_zero", int_t, 0, "Zero output steering value",     90, 0, 180)
gen.add("steering_max",  int_t, 0, "Maximum output steering value", 135, 0, 180)
gen.add("angular_sat_min", double_t, 0, "Maximum input angular speed", -0.5, -5.0, 5.0)
gen.add("angular_sat_max", double_t, 0, "Minimum input angular speed",  0.5, -5.0, 5.0)

gen.add("speed_min",  int_t, 0, "Minimum output speed value", -500, -1000, 1000)
gen.add("speed_zero", int_t, 0, "Zero output speed value",       0, -1000, 1000)
gen.add("speed_max",  int_t, 0, "Maximum output speed value",  500, -1000, 1000)
gen.add("linear_sat_min", double_t, 0, "Maximum input linear speed",  -0.5, -5.0, 5.0)
gen.add("linear_sat_max", double_t, 0, "Minimum input linear speed ",  0.5, -5.0, 5.0)

gen.add("invert_speed",    bool_t, 0, "Invert speed signum",       False)
gen.add("invert_steering", bool_t, 0, "Invert steering direction", False)

exit(gen.generate(PACKAGE, "TwistToManualControlAlgorithm", "TwistToManualControl"))
